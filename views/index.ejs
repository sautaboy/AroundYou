<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Auth | Chat App</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap"
      rel="stylesheet"
    />
    <style>
      :root {
        --primary: #4361ee;
        --primary-dark: #2749d2;
        --bg-gradient: linear-gradient(135deg, #eef2ff, #f9fafc);
        --card-bg: #fff;
        --border: #e5e7eb;
        --radius: 14px;
        --shadow: 0 8px 32px rgba(0, 0, 0, 0.08);
        --transition: 0.3s ease;
        --text-dark: #1f2937;
        --text-light: #6b7280;
      }
      body {
        font-family: "Inter", sans-serif;
        background: var(--bg-gradient);
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 100vh;
        margin: 0;
      }
      .card {
        background: var(--card-bg);
        width: 100%;
        max-width: 420px;
        border-radius: var(--radius);
        box-shadow: var(--shadow);
        overflow: hidden;
        animation: fadeIn 0.5s ease;
      }
      .tabs {
        display: flex;
        border-bottom: 1px solid var(--border);
      }
      .tab {
        flex: 1;
        text-align: center;
        padding: 16px;
        cursor: pointer;
        font-weight: 500;
        color: var(--text-light);
        transition: color var(--transition), border var(--transition),
          background var(--transition);
      }
      .tab.active {
        color: var(--primary-dark);
        border-bottom: 3px solid var(--primary);
        background: #f9fafc;
      }
      .content {
        padding: 28px 26px;
      }
      form {
        display: none;
        flex-direction: column;
        gap: 14px;
        animation: slideFade 0.4s ease;
      }
      form.active {
        display: flex;
      }
      label {
        font-size: 14px;
        font-weight: 500;
        color: var(--text-dark);
      }
      input,
      select {
        width: 100%;
        padding: 12px;
        border: 1px solid var(--border);
        border-radius: 8px;
        font-size: 15px;
        background: #f9fafb;
        transition: all var(--transition);
        outline: none;
      }
      input:focus,
      select:focus {
        border-color: var(--primary);
        background: #fff;
        box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.15);
      }
      button {
        width: 100%;
        padding: 13px;
        background: var(--primary);
        border: none;
        color: #fff;
        font-size: 16px;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 600;
        transition: all var(--transition);
        box-shadow: 0 4px 14px rgba(67, 97, 238, 0.2);
      }
      button:hover {
        background: var(--primary-dark);
        transform: translateY(-1px);
        box-shadow: 0 6px 18px rgba(67, 97, 238, 0.25);
      }
      button:active {
        transform: scale(0.98);
      }
      .message {
        margin-top: 6px;
        text-align: center;
        font-size: 14px;
        font-weight: 500;
        color: #dc2626;
        min-height: 20px;
      }
      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
      @keyframes slideFade {
        from {
          opacity: 0;
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
    </style>
  </head>
  <body>
    <div class="card">
      <!-- Tabs -->
      <div class="tabs">
        <div class="tab active" data-target="loginForm">Login</div>
        <div class="tab" data-target="signupForm">Signup</div>
      </div>

      <div class="content">
        <!-- Login Form -->
        <form id="loginForm" class="active" method="POST" action="/login">
          <label for="login-email">Email</label>
          <input
            type="email"
            name="email"
            id="login-email"
            placeholder="Enter your email"
            required
          />

          <label for="login-password">Password</label>
          <input
            type="password"
            name="password"
            id="login-password"
            placeholder="Enter password"
            required
          />

          <button type="submit">Login</button>
        </form>

        <!-- Signup Form -->
        <form id="signupForm" autocomplete="off">
          <label for="signup-username">Username</label>
          <input
            type="text"
            name="username"
            id="signup-username"
            placeholder="Choose username"
            required
          />

          <label for="signup-email">Email</label>
          <input
            type="email"
            name="email"
            id="signup-email"
            placeholder="Enter your email"
            required
          />

          <label for="signup-password">Password</label>
          <input
            type="password"
            name="password"
            id="signup-password"
            placeholder="Min. 8 characters"
            required
            minlength="8"
          />

          <label for="signup-gender">Gender</label>
          <select name="gender" id="signup-gender" required>
            <option value="">Select gender</option>
            <option value="male">Male</option>
            <option value="female">Female</option>
          </select>

          <button type="submit">Send OTP</button>
        </form>

        <!-- OTP Verification -->
        <form id="otpForm">
          <label for="otpEmail">Email</label>
          <input type="email" id="otpEmail" name="email" readonly />

          <label for="otpInput">OTP</label>
          <input
            type="text"
            name="otp"
            id="otpInput"
            placeholder="Enter 6-digit OTP"
            required
            maxlength="6"
            pattern="[0-9]{6}"
          />

          <button type="submit">Verify OTP</button>
        </form>

        <div class="message" id="msg"></div>
      </div>
    </div>

    <script>
      const tabs = document.querySelectorAll(".tab");
      const forms = document.querySelectorAll("form");
      const signupForm = document.getElementById("signupForm");
      const otpForm = document.getElementById("otpForm");
      const loginForm = document.getElementById("loginForm");
      const msgBox = document.getElementById("msg");
      const otpEmail = document.getElementById("otpEmail");

      // Switch Tabs
      tabs.forEach((tab) => {
        tab.addEventListener("click", () => {
          tabs.forEach((t) => t.classList.remove("active"));
          tab.classList.add("active");

          forms.forEach((f) => f.classList.remove("active"));
          document.getElementById(tab.dataset.target).classList.add("active");

          msgBox.innerText = "";
        });
      });

      // Step 1: Send OTP (Signup)
      signupForm.addEventListener("submit", async (e) => {
        e.preventDefault();
        msgBox.innerText = "";
        const data = Object.fromEntries(new FormData(signupForm).entries());

        const btn = signupForm.querySelector("button");
        btn.disabled = true;
        btn.innerText = "Sending...";

        try {
          const res = await fetch("/send-otp", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data),
          });
          const result = await res.json();
          msgBox.innerText = result.message;

          if (result.success) {
            otpEmail.value = data.email;
            signupForm.classList.remove("active");
            otpForm.classList.add("active");
          }
        } catch (err) {
          msgBox.innerText = "Error sending OTP";
        } finally {
          btn.disabled = false;
          btn.innerText = "Send OTP";
        }
      });

      // Step 2: Verify OTP
      otpForm.addEventListener("submit", async (e) => {
        e.preventDefault();
        msgBox.innerText = "";
        const data = Object.fromEntries(new FormData(otpForm).entries());

        const res = await fetch("/verify-otp", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(data),
        });
        const result = await res.json();
        msgBox.innerText = result.message;

        if (result.success) {
          alert("Signup successful! Please login.");
          location.reload();
        }
      });

      // Step 3: Login
      loginForm.addEventListener("submit", async (e) => {
        e.preventDefault();
        msgBox.innerText = "";
        const data = Object.fromEntries(new FormData(loginForm).entries());

        const btn = loginForm.querySelector("button");
        btn.disabled = true;
        btn.innerText = "Logging in...";

        try {
          const res = await fetch("/login", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data),
          });
          const result = await res.json();
          msgBox.innerText = result.message;

          if (result.success) {
            window.location.href = "/chat";
          }
        } catch (err) {
          msgBox.innerText = "Login error";
        } finally {
          btn.disabled = false;
          btn.innerText = "Login";
        }
      });
    </script>
  </body>
</html>